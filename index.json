[{"categories":null,"content":"es6 features","date":"2020-10-06","objectID":"/20201006-es6-note/","tags":["javascript","es6"],"title":"ES6 語法學習筆記","uri":"/20201006-es6-note/"},{"categories":null,"content":"ace-code-editor, showdown, github-markdown-css 最近透過兩門線上課程學習現代前端的知識，在此紀錄一下對於 es6 語法的觀念及細節 ","date":"2020-10-06","objectID":"/20201006-es6-note/:0:0","tags":["javascript","es6"],"title":"ES6 語法學習筆記","uri":"/20201006-es6-note/"},{"categories":null,"content":"let 與 const var 的作用範圍是 scope(作用域) function scope global scope (不是在函式中，就是 global scope) let, const 的作用範圍是 block (用大括號來介定它的範圍) 大括孤，中間有程式碼，稱為 block const 是不能被更改(reassign) 的變數 常用來宣告元素實體。物件、陣列、函式也常以 const 宣告 只有在 object、array 的情況下可以塞東西，但不可以改變型別，所以在嚴謹的情況下會使用 const 來宣告物件或陣列 const 可視為不能 reassign 的 let let 與 const 可以完全取代 var 範例 var num = 1; if (true) { // 用 var 宣告，變數會跑到global var name = \"tony\"; // let 是用大括號來介定它的範圍 // 暫時性的變數用 let 宣告 (local 變數) let num = 2; // const 是不能被更改的變數，且作用範圍是local，常用在宣告 document.getElementById() const selector = \"a\"; // selector = \"b\"; console.log(selector); } console.log(name); console.log(num); // 1 // const 只有在 object 和 array 的情況下可以塞東西，但不可以改變型別 // 所以在嚴謹的情況下會使用 const 來宣告物件或陣列 const a = {}; a.name = \"Mike\"; a.name = \"Judy\"; // a = []; // 不被允許 console.log(a); const b = []; b.push(1); // b = 2; // 不被允許 console.log(b); ","date":"2020-10-06","objectID":"/20201006-es6-note/:1:0","tags":["javascript","es6"],"title":"ES6 語法學習筆記","uri":"/20201006-es6-note/"},{"categories":null,"content":"變數解構 const user = { name: \"Mike\", age: 12, address: \"Taiwan\", }; const { name, age, address } = user; console.log(name, age, address); // 直接將物件放到物件中，物件會在物件中自動進行解構(以變數名稱為其key值) const userData = { user, // 會自動解構成 =\u003e user: {name: \"Mike\", ... } }; console.log(userData); ","date":"2020-10-06","objectID":"/20201006-es6-note/:2:0","tags":["javascript","es6"],"title":"ES6 語法學習筆記","uri":"/20201006-es6-note/"},{"categories":null,"content":"箭頭函式運算式 const Add = function (a, b) { return a + b; } // 省略 function 關鍵字，加上鍵頭，變成： const Add = (a, b) =\u003e { return a + b; } // 當回傳只有一行時，可進一步簡化成： const Add = (a, b) =\u003e a + b; // 當函數參數只有一個的時候，可以省略小括孤 const Double = a =\u003e a * 2; 箭頭函式中沒有this，this會往上一層找 若要取得動元素實體本身，則要透過 e.target 取得 document.getElementById(\"aLink1\").addEventListener(\"click\", function () { console.log(this); // 指向 #aLink1 }); document.getElementById(\"aLink2\").addEventListener(\"click\", (e) =\u003e { // 箭頭函式中沒有this，this會往上一層找 console.log(this); // 指向 window // 若要取得動元素實體本身，則要透過 e.target 取得 console.log(e.target); // 指向 #aLink2 }); 箭頭函數的參數可以指定預設值 const ArrayToStr = (arr = [1, 1, 1, 1]) =\u003e { return arr.map((item) =\u003e item + \"\"); } ","date":"2020-10-06","objectID":"/20201006-es6-note/:3:0","tags":["javascript","es6"],"title":"ES6 語法學習筆記","uri":"/20201006-es6-note/"},{"categories":null,"content":"函數的 this 指向誰，取決於如何執行函式 function jump() { console.log(this); } // 1. 直接執行 (this 為 gloabal 或 window) jump(); // this 指向 window // 2. 放到物件中執行 (this 為 該物件) var a = {}; a.jump = jump; a.jump(); // this 指向 a // 3. 綁定 dom 事件 (this 為 發出事件的DOM) btn.addEventListener('click', jump); // this 指向 #btn dom 物件 // 當用箭頭函式宣告，則不管怎麼執行，this都是上層的this (箭頭函數沒有自己的 this) const jump = () =\u003e { console.log(this) } ","date":"2020-10-06","objectID":"/20201006-es6-note/:4:0","tags":["javascript","es6"],"title":"ES6 語法學習筆記","uri":"/20201006-es6-note/"},{"categories":null,"content":"字串模版 // 透過字串模版，可以更方面的進行字串與變數的串接、換行 const add = (name, age) =\u003e { return ` Hi 我叫${name}， 我今年${age}歲 `; }; console.log(add(\"Mike\", 12)); ","date":"2020-10-06","objectID":"/20201006-es6-note/:5:0","tags":["javascript","es6"],"title":"ES6 語法學習筆記","uri":"/20201006-es6-note/"},{"categories":null,"content":"ES module ./js/Tools.js const Add = (a, b) =\u003e { return a + b; }; // 可以 export 很多東西出去，但是default只能有一個 export default Add; // 要用 export 丟出去的只能用 const 變數丟出去 (named export) export const Name = \"mike\"; export const age = 12; export const Minus = (a, b) =\u003e { return a - b; } index.html \u003c!-- 用 type=\"module\" 告訴瀏覽器這邊是屬於 es6 module 的用法，讓它認得 import 指令 --\u003e \u003cscript type=\"module\"\u003e // 除了 default 的東西，其它要用解構的方式 import 進來 import Add, { Name as userName, age, Minus } from \"./js/Tools.js\"; console.log(Add(1, 2)); console.log(userName); console.log(age); console.log(Minus(5, 3)); \u003c/script\u003e ","date":"2020-10-06","objectID":"/20201006-es6-note/:6:0","tags":["javascript","es6"],"title":"ES6 語法學習筆記","uri":"/20201006-es6-note/"},{"categories":null,"content":"Class class Dog extends Animal { constructor() { this.age = 0; } bark() { console.log('woof'); } } const dog = new Dog(); class Dog extends Animal { this.age = 0; bark() =\u003e console.log('woof'); } const dog = new Dog(); 參考資料： 2020 Vue3 專業職人 | 入門篇 (預購中) - HiSKIO 跨領域學程式 | 專業程式線上課程平台 | 嗨 程式技能 React 16 完全精通 - 從原理到大量實戰應用 - HiSKIO 跨領域學程式 | 專業程式線上課程平台 | 嗨 程式技能 ","date":"2020-10-06","objectID":"/20201006-es6-note/:7:0","tags":["javascript","es6"],"title":"ES6 語法學習筆記","uri":"/20201006-es6-note/"},{"categories":null,"content":"ace-code-editor, showdown, github-markdown-css","date":"2020-07-15","objectID":"/20200715-markdown-editor-by-ace-and-showdown/","tags":["markdown","javascript"],"title":"Markdown editor with vscode keybinding","uri":"/20200715-markdown-editor-by-ace-and-showdown/"},{"categories":null,"content":"ace-code-editor, showdown, github-markdown-css 此篇文章分享如何簡單建立一個好用的 markdown editor 將會用到兩個 js 套件：ace-code-editor 和 showdown markdown 呈現的 css 則套用 github-markdown-css 那就開始吧 ","date":"2020-07-15","objectID":"/20200715-markdown-editor-by-ace-and-showdown/:0:0","tags":["markdown","javascript"],"title":"Markdown editor with vscode keybinding","uri":"/20200715-markdown-editor-by-ace-and-showdown/"},{"categories":null,"content":"1. git init \u0026 npm init mkdir showdown-practice cd showdown-practice git init npm init ","date":"2020-07-15","objectID":"/20200715-markdown-editor-by-ace-and-showdown/:1:0","tags":["markdown","javascript"],"title":"Markdown editor with vscode keybinding","uri":"/20200715-markdown-editor-by-ace-and-showdown/"},{"categories":null,"content":"2. npm install npm install jquery npm install bootstrap npm install showdown npm install github-markdown-css npm install ace-builds ","date":"2020-07-15","objectID":"/20200715-markdown-editor-by-ace-and-showdown/:2:0","tags":["markdown","javascript"],"title":"Markdown editor with vscode keybinding","uri":"/20200715-markdown-editor-by-ace-and-showdown/"},{"categories":null,"content":"3. index.html \u003clink rel=\"stylesheet\" href=\"node_modules/github-markdown-css/github-markdown.css\"\u003e \u003clink rel=\"stylesheet\" href=\"node_modules/bootstrap/dist/css/bootstrap.min.css\"\u003e \u003cstyle\u003e body { height: 100vh; } \u003c/style\u003e \u003cdiv class=\"d-flex justify-content-around align-items-center h-100 p-5\"\u003e \u003cdiv class=\"flex-fill h-100 m-3 mb-5\"\u003e \u003ch3\u003eInput markdown\u003c/h3\u003e \u003cdiv id=\"markdownArea\" class=\"border rounded w-100 h-100\"\u003e\u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"flex-fill h-100 m-3 mb-5\"\u003e \u003ch3\u003eOutput Html\u003c/h3\u003e \u003cdiv id=\"outputArea\" class=\"markdown-body border rounded w-100 h-100 p-3 overflow-auto\"\u003e\u003c/div\u003e \u003c/div\u003e \u003c/div\u003e \u003cscript src=\"node_modules/showdown/dist/showdown.min.js\"\u003e\u003c/script\u003e \u003cscript src=\"node_modules/jquery/dist/jquery.min.js\"\u003e\u003c/script\u003e \u003cscript src=\"node_modules/ace-builds/src-min/ace.js\"\u003e\u003c/script\u003e \u003cscript\u003e $(function() { var editor = initEditor(\"markdownArea\", \"outputArea\"); }); function initEditor(inputId, outputId) { let editor = ace.edit(inputId); // editor.setReadOnly(true); // 是否唯讀 editor.setTheme(\"ace/theme/dawn\"); // 主題樣式 editor.setShowPrintMargin(false); // 不要顯示右方 margin editor.setKeyboardHandler(\"ace/keyboard/vscode\"); // 快捷鍵類型 (keybinding) editor.session.setMode(\"ace/mode/markdown\"); // 內容語言類型 editor.session.on('change', function(delta) { // delta.start, delta.end, delta.lines, delta.action var markdownText = editor.getValue(); var html = markdownToHtml(markdownText); $(\"#\" + outputId).html(html); }); return editor; } function markdownToHtml(text) { var converter = new showdown.Converter(); return converter.makeHtml(text); } \u003c/script\u003e 以上為最簡化的程式，詳細可再到我的 github 上查看 ","date":"2020-07-15","objectID":"/20200715-markdown-editor-by-ace-and-showdown/:3:0","tags":["markdown","javascript"],"title":"Markdown editor with vscode keybinding","uri":"/20200715-markdown-editor-by-ace-and-showdown/"},{"categories":null,"content":"  LoveIt is a clean, elegant but advanced blog theme for Hugo developed by Dillon. It is based on the original LeaveIt Theme and KeepIt Theme. Hugo Theme LoveItHugo Theme LoveIt \" Hugo Theme LoveIt ","date":"2019-08-02","objectID":"/about/:0:0","tags":null,"title":"About LoveIt","uri":"/about/"},{"categories":null,"content":"Features Performance and SEO  Optimized for performance: 99/100 on mobile and 100/100 on desktop in Google PageSpeed Insights  Optimized SEO performance with a correct SEO SCHEMA based on JSON-LD  Google Analytics supported  Fathom Analytics supported  Search engine verification supported (Google, Bind, Yandex and Baidu)  CDN for third-party libraries supported  Automatically converted images with Lazy Load by lazysizes Appearance and Layout / Responsive layout / Light/Dark mode  Globally consistent design language  Pagination supported  Easy-to-use and self-expanding table of contents  Multilanguage supported and i18n ready  Beautiful CSS animation Social and Comment Systems  Gravatar supported by Gravatar  Local Avatar supported  Up to 64 social links supported  Up to 28 share sites supported  Disqus comment system supported by Disqus  Gitalk comment system supported by Gitalk  Valine comment system supported by Valine  Facebook comments system supported by Facebook  Telegram comments system supported by Comments  Commento comment system supported by Commento  Utterances comment system supported by Utterances Extended Features  Search supported by Lunr.js or algolia  Twemoji supported  Automatically highlighting code  Copy code to clipboard with one click  Images gallery supported by lightgallery.js  Extended Markdown syntax for Font Awesome icons  Extended Markdown syntax for ruby annotation  Extended Markdown syntax for fraction  Mathematical formula supported by $ \\KaTeX $  Diagrams shortcode supported by mermaid  Interactive data visualization shortcode supported by ECharts  Mapbox shortcode supported by Mapbox GL JS  Music player shortcode supported by APlayer and MetingJS  Bilibili player shortcode  Kinds of admonitions shortcode  Custom style shortcode  Custom script shortcode  Animated typing supported by TypeIt  Dynamic scroll supported by Smooth Scroll  Cookie consent banner supported by cookieconsent … ","date":"2019-08-02","objectID":"/about/:0:1","tags":null,"title":"About LoveIt","uri":"/about/"},{"categories":null,"content":"License LoveIt is licensed under the MIT license. Check the LICENSE file for details. Thanks to the authors of following resources included in the theme: normalize.css Font Awesome Simple Icons Animate.css Smooth Scroll autocomplete.js Lunr.js algoliasearch lazysizes object-fit-images Twemoji lightgallery.js clipboard.js Sharer.js TypeIt $ \\KaTeX $ mermaid ECharts Mapbox GL JS APlayer MetingJS Gitalk Valine cookieconsent ","date":"2019-08-02","objectID":"/about/:0:2","tags":null,"title":"About LoveIt","uri":"/about/"}]